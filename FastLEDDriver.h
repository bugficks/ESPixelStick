///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __FASTLEDDRIVER_H__
#define __FASTLEDDRIVER_H__

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "Driver.h"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct config_t;

struct CRGB;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class FastLEDDriver
    : public Driver
{
    uint16_t _numLeds = 0;
    CRGB *_leds = nullptr;
    const String _name;
    PixelColor _color = PixelColor::RGB;

public:
    FastLEDDriver(const String &name)
        : _name(name)
    {
    }

    int begin(const config_t *config);

    uint8_t *getData();
    void setValue(uint16_t address, uint8_t value)
    {
        getData()[address] = value;
    }

    void show();
    bool canRefresh()
    {
        return true;
    }

    const String &name() const
    {
        return _name;
    }

    void setOption(const String &name, int value)
    {
    }

    void updateOrder(PixelColor color);
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // #ifndef __FASTLEDDRIVER_H__

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
